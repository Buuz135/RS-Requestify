buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url = "https://files.minecraftforge.net/maven" }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    configurations {
        classpath.resolutionStrategy {
            cacheDynamicVersionsFor 10, 'seconds'
            cacheChangingModulesFor 0, 'seconds'
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'com.selesse:gradle-git-changelog:0.2.+'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.1.0"
    }
}
plugins {
    id "com.github.hierynomus.license" version "0.14.0"
    id "com.matthewprenger.cursegradle" version "1.1.0"
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.selesse.git.changelog'
apply plugin: 'java'


version = mod_version
group = modGroup
archivesBaseName = modBaseName

String b = ""
if (project.hasProperty("teamcity")) {
    b = System.getenv("BUILD_NUMBER")
}

if (b == null || b == "") {
    version = "${project.minecraft_version}-${project.mod_version}"
} else {
    version = "${project.minecraft_version}-${project.mod_version}-" + b
}

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20200916-1.16.2'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    //accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                seals {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                seals {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'seals', '--all', '--output', file('src/generated/resources/')

            mods {
                seals {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://repo.refinedmods.com"
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.3-34.1.0'
    compileOnly fg.deobf("com.refinedmods:refinedstorage:1.9.8+")
    runtimeOnly fg.deobf("com.refinedmods:refinedstorage:1.9.8+")
    compileOnly fg.deobf("mezz.jei:jei-1.16.3:7.5.0.42:api")
    // at runtime, use the full JEI jar
    runtimeOnly fg.deobf("mezz.jei:jei-1.16.3:7.5.0.42")
}

changelog {
    title = "RS: Requestify"
    fileName = "CHANGELOG.md"
    outputDirectory = file("$projectDir")
    since = '0.0.0'
    commitFormat = '%s (%an)'
    markdown {
        commitFormat = '* %s (%an)'
    }
    includeLines = {
        !it.contains("Merge")
    }
    processLines = {
        String input = it as String
        if (input.contains('[ci skip] ')) {
            input = input.minus('[ci skip] ')
        }
        input
    }
}

tasks.curseforge.enabled =  project.hasProperty('curse_api')

curseforge {
    if (project.hasProperty('curse_api')) {
        apiKey = project.curse_api
    }
    project {
        id = '307788'
        changelog = file('CHANGELOG.md')
        changelogType = 'markdown'
        releaseType = 'beta'

        mainArtifact(jar){
            relations {
                requiredDependency 'refined-storage'
            }
        }

    }
}

license {
    header rootProject.file('HEADER')
    include "**/*.java"
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    ext.name = 'Buuz135'
    ext.mod= 'RS: Requestify'
    ignoreFailures = true
    mapping {
        java='SLASHSTAR_STYLE'
    }
}

jar {
    manifest {
        attributes(["Specification-Title": project.name,
                    "Specification-Vendor": "Buuz135",
                    "Specification-Version": "1.0",
                    "Implementation-Title": project.name,
                    "Implementation-Version": "${project.mod_version}",
                    "Implementation-Vendor" :"Buuz135",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    "ModSide": "BOTH",
        ],)

    }
}
